#!/bin/bash

M2M=~/m2m-aligner-1.2/m2m-aligner
DTL=~/DirecTL-p/directlp

# Required files
################
TRNFILE=$1
DEVFILE=$2
#TSTFILE=enhi.tst

# Development phase
###################
# First we need to align our data
$M2M --delX -i $TRNFILE
# --delX allows deletions on X side; --delY is a possibility too that can be
# tried, but do *not* enable both! Otherwise it may make an alignment by simply
# deleting both sides entirely.
# --maxX M and --maxY N tell it to use a M-N alignment. Default is 2-2.
# The default format (--inFormat news) is not as convenient for L2P; for that,
# you should use --informat l2p. NEWS format has the X and Y separated by tabs,
# with each character within X and Y separated by spaces. e.g.:
# t e s t<TAB>t e s t

$M2M --delX --alignerIn $TRNFILE.*.model -i $DEVFILE
# Note that the above command uses *-globbing. This may be bad if there are
# multiple matches, so in that case you will need to fill in the model name
# manually. Warning applies in subsequent commands as well.

# Get some test-format data from the development set so we can examine the
# output
cut -f 1 $DEVFILE.*.align | sed -e 's/:/|/g' | uniq > $DEVFILE.words

# Now we can run DirecTL+ using the development set to tell us how many
# iterations to use. I personally question this as the best way to determine the
# number of iterations but neither Tee nor I ever experimented with anything
# else (despite having an idea or two), so we stick with it.
$DTL --inChar : --tal 5 --order 1 --linearChain --jointMgram 6 -f \
    $TRNFILE.*.align -d $DEVFILE.*.align -t $DEVFILE.words -a $DEVFILE.output \
    --nBestTest 10
# --tal 5 trains at least five iterations (Tee found this useful, without it he
# got some strange results sometimes)
# --order 1 enables Markov features and sets Markov order to 1
# --linarChain enables linear chain features
# --jointMgram 6 enables joint n-gram features and sets n-gram order to 6
# -f sets input file, -d sets dev file, -t sets test file, -a sets the output
# (answer) file
# --nBestTest 10 enables 10-best outputs
# DirecTL+ will keep optimizing until it decreases performance on the dev set.
# You will want to watch for what that iteration number is. If it ends on
# iteration 7 and iteration 7 decreased results, then 6 will be our maximum
# number of iterations to use during testing.
# Note that there is also a parameter for the context feature window and n-gram
# size, but I usually leave this at the default (as does Tee, IIRC).

# If you want to test various parameters (like maxX, maxY, joint n-gram order,
# etc.) you can inspect/test the answer file generated by DirecTL+. However,
# beware that DirecTL+ will always use the last model to generate this file,
# even if that model gives worse performance than the one before it. I made a
# fix for this and gave it to Tee but I don't think he's incorporated it into
# the main code yet.




# Testing phase
###############

# Merge training and development for more data
#TRNDEVFILE=enhi.trn.dev
#cat $TRNFILE $DEVFILE > $TRNDEVFILE

# Repeat above process using combined train/dev as well as actual testing data
#$M2M --delX -i $TRNDEVFILE
#$M2M --delX --alignerIn $TRNDEVFILE.*.model -i $TSTFILE
#cut -f 1 $TSTFILE.*.align | sed -e 's/:/|/g' | uniq > $TSTFILE.words

# Here you use your maximum iteration number from the development phase (--tam
# parameter):
#$M2M --inChar : --tal 5 --tam 6 --order 1 --linearChain --jointMgram 6 -f \
#    $TRNDEVFILE.*.align -t $TSTFILE.words -a $TSTFILE.output --nBestTest 10
